Index: app/src/main/java/com/example/login/user/UserLoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.login.user;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\n\r\nimport com.example.login.MyApplication;\r\nimport com.example.login.R;\r\nimport com.example.login.util.OkHttp;\r\nimport com.example.login.util.SharedUtil;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\nimport android.util.Log;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\n\r\npublic class UserLoginActivity extends AppCompatActivity implements View.OnClickListener {\r\n    private EditText login_username;\r\n    private EditText login_password;\r\n    private Button btn_login_user;\r\n    private Button btn_forget_password;\r\n    private Button btn_enroll;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_user_login);\r\n        //按钮：登录\r\n\r\n        login_username=findViewById(R.id.username1);\r\n        login_password=findViewById(R.id.password1);\r\n\r\n        btn_login_user = findViewById(R.id.modify);\r\n        btn_login_user.setOnClickListener(this);\r\n//        btn_login_user.setOnClickListener(new View.OnClickListener() {\r\n//            @Override\r\n//            public void onClick(View v) {\r\n//                final String username = login_username.getText().toString();\r\n//                final String password = login_password.getText().toString();\r\n//                new Thread(new Runnable() {\r\n//                    @Override\r\n//                    public void run() {\r\n//                        JSONObject obj = new JSONObject();\r\n//                        try {\r\n//                            obj.put(\"username\",username);\r\n//                            obj.put(\"password\",password);\r\n//                        } catch (JSONException e) {\r\n//                            e.printStackTrace();\r\n//                        }\r\n//\r\n//                        MediaType type = MediaType.parse(\"application/json;charset=utf-8\");\r\n//                        RequestBody RequestBody2 = RequestBody.create(type,\"\"+obj.toString());\r\n//                        try {\r\n//                            OkHttpClient client = new OkHttpClient();\r\n//                            Request request = new Request.Builder()\r\n//                                    // 指定访问的服务器地址\r\n//                                    .url(\"http://192.168.140.71:9090/login\").post(RequestBody2)\r\n//                                    .build();\r\n//                            Response response = client.newCall(request).execute();\r\n//                            String responseData = response.body().string();\r\n//                            parseJSONWithJSONObject(responseData);\r\n//                            if(parseJSONWithJSONObject(responseData).equals(\"登录成功\")){\r\n//                                runOnUiThread(new Runnable() {\r\n//                                    @Override\r\n//                                    public void run() {\r\n//                                        Toast.makeText(UserLoginActivity.this,\"登录成功\",Toast.LENGTH_SHORT).show();\r\n//                                        Intent i= new Intent(UserLoginActivity.this, UserMainInterfaceActivity.class);\r\n//                                        startActivity(i);\r\n//                                    }\r\n//                                });\r\n//                            }\r\n//                            else if(parseJSONWithJSONObject(responseData).equals(\"用户名或密码错误\")){\r\n//                                runOnUiThread(new Runnable() {\r\n//                                    @Override\r\n//                                    public void run() {\r\n//                                        Toast.makeText(UserLoginActivity.this,\"用户名或密码错误\",Toast.LENGTH_SHORT).show();\r\n//                                    }\r\n//                                });\r\n//                            }\r\n//                        } catch (Exception e) {\r\n//                            e.printStackTrace();\r\n//                            runOnUiThread(new Runnable() {\r\n//                                @Override\r\n//                                public void run() {\r\n//                                    Toast.makeText(UserLoginActivity.this,\"网络错误\",Toast.LENGTH_SHORT).show();\r\n//                                }\r\n//                            });\r\n//                        }\r\n//                    }\r\n//                }).start();\r\n//            }\r\n//        });\r\n\r\n\r\n        //按钮：注册\r\n        btn_enroll = findViewById(R.id.enroll);\r\n        btn_enroll.setOnClickListener(this);\r\n//        btn_enroll.setOnClickListener(new View.OnClickListener() {//点击注册账号按钮\r\n//            @Override\r\n//            public void onClick(View view) {\r\n//                //填写页面跳转的逻辑UserLoginActivity\r\n//                Intent intent=new Intent(UserLoginActivity.this,EnrollActicity/*UserMainInterfaceActivity*/.class);\r\n//                startActivity(intent);\r\n//            }\r\n//        });\r\n\r\n        //按钮：忘记密码\r\n        btn_forget_password=findViewById(R.id.forget);\r\n        btn_forget_password.setOnClickListener(this);\r\n//        btn_forget_password.setOnClickListener(new View.OnClickListener() {//登录按钮\r\n//            @Override\r\n//            public void onClick(View view) {\r\n//                //填写页面跳转的逻辑\r\n//                Intent i = new Intent(UserLoginActivity.this, ForgetPasswordActivity.class);\r\n//                //启动\r\n//                startActivity(i);\r\n//\r\n//            }\r\n//        });\r\n    }\r\n    private String parseJSONWithJSONObject(String jsonData) {\r\n        try {\r\n            JSONObject object=new JSONObject(jsonData);\r\n            String name = object.getString(\"msg\");\r\n            //日志\r\n            Log.d(\"name\", name);\r\n            return name;\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n            return \"error\";\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View view) {\r\n        if(view.getId() == R.id.modify){\r\n            new Thread(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                    HashMap<String, String> hashMap = new HashMap<>();\r\n                    hashMap.put(\"username\", login_username.getText().toString());\r\n                    hashMap.put(\"password\", login_password.getText().toString());\r\n                    ArrayList<String> send = new ArrayList<String>();\r\n                    send.add(\"username\");\r\n                    send.add(\"password\");\r\n                    final ArrayList<String> recieve = new ArrayList<String>();\r\n                    recieve.add(\"msg\");\r\n                    OkHttp okHttp = new OkHttp(send,recieve);\r\n                    HashMap<String,String> rhm = okHttp.sendRequestWithOkHttp(hashMap, \"http://192.168.1.9:9090/login\");\r\n                    if (rhm.get(\"msg\").equals(\"登录成功\")){\r\n                        MyApplication application = (MyApplication) UserLoginActivity.this.getApplicationContext();\r\n                        application.setName(hashMap.get(\"username\"));//设置全局变量name\r\n                        SharedUtil sp = SharedUtil.getIntance(UserLoginActivity.this,\"logininfo\");\r\n                        sp.writeShared(send,hashMap);//写入登录信息\r\n                        sp.writeShared(\"loginstate\", true);\r\n                        Log.d(\"tag\", String.valueOf(sp.readShared(\"loginstate\", false)));\r\n                        new Thread(new Runnable() {\r\n                            @Override\r\n                            public void run() {\r\n                                HashMap<String, String> shm = new HashMap<>();\r\n                                shm.put(\"uusername\", login_username.getText().toString());\r\n                                ArrayList<String> send = new ArrayList<String>();\r\n                                send.add(\"uusername\");\r\n                                ArrayList<String> recieve = new ArrayList<String>();\r\n                                recieve.add(\"msg\");\r\n                                recieve.add(\"uage\");\r\n                                recieve.add(\"usex\");\r\n                                recieve.add(\"uaddress\");\r\n                                recieve.add(\"uphone\");\r\n                                recieve.add(\"ubloodtype\");\r\n                                recieve.add(\"uhealthcondition\");\r\n                                OkHttp okHttp = new OkHttp(send,recieve);\r\n                                HashMap<String,String> rhm = okHttp.sendRequestWithOkHttp(shm, \"http://192.168.1.9:9090/display\");\r\n                                SharedUtil sp = SharedUtil.getIntance(UserLoginActivity.this,\"healthInfo\");\r\n                                sp.writeShared(recieve,rhm);\r\n\r\n                            }\r\n                        }).start();\r\n                        Intent i= new Intent(UserLoginActivity.this, UserMainInterfaceActivity.class);\r\n                        startActivity(i);\r\n                    }\r\n                }\r\n            }).start();\r\n        }\r\n        if (view.getId() == R.id.enroll){\r\n            //填写页面跳转的逻辑UserLoginActivity\r\n            Intent intent=new Intent(UserLoginActivity.this, EnrollActicity/*UserMainInterfaceActivity*/.class);\r\n            startActivity(intent);\r\n        }\r\n        if (view.getId() == R.id.forget){\r\n            //填写页面跳转的逻辑\r\n                Intent i = new Intent(UserLoginActivity.this, ForgetPasswordActivity.class);\r\n                //启动\r\n                startActivity(i);\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/login/user/UserLoginActivity.java b/app/src/main/java/com/example/login/user/UserLoginActivity.java
--- a/app/src/main/java/com/example/login/user/UserLoginActivity.java	(revision 50db4cc62eeb34e09d17eecf44afe8993ff19cf4)
+++ b/app/src/main/java/com/example/login/user/UserLoginActivity.java	(date 1649338610757)
@@ -152,7 +152,7 @@
                     final ArrayList<String> recieve = new ArrayList<String>();
                     recieve.add("msg");
                     OkHttp okHttp = new OkHttp(send,recieve);
-                    HashMap<String,String> rhm = okHttp.sendRequestWithOkHttp(hashMap, "http://192.168.1.9:9090/login");
+                    HashMap<String,String> rhm = okHttp.sendRequestWithOkHttp(hashMap, "http://192.168.56.1:9090/login/users");
                     if (rhm.get("msg").equals("登录成功")){
                         MyApplication application = (MyApplication) UserLoginActivity.this.getApplicationContext();
                         application.setName(hashMap.get("username"));//设置全局变量name
Index: app/src/main/java/com/example/login/util/OkHttp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.login.util;\r\n\r\n\r\nimport android.app.Activity;\r\nimport android.util.Log;\r\n\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport com.example.login.MyApplication;\r\nimport com.example.login.user.UserLoginActivity;\r\nimport com.example.login.user.UserOrder;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Iterator;\r\nimport java.util.List;\r\n\r\nimport okhttp3.FormBody;\r\nimport okhttp3.MediaType;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\nimport okhttp3.RequestBody;\r\nimport okhttp3.Response;\r\n\r\npublic class OkHttp {\r\n\r\n\r\n    private static final String TAG = \"OkHttp\" ;\r\n\r\n    private static int state_JSON = 0;//判断返回Json数据格式\r\n    private static Activity activity;\r\n\r\n\r\n    public static final MediaType JSON\r\n            = MediaType.get(\"application/json; charset=utf-8\");\r\n\r\n    private ArrayList<String> send;//发送的每个数据对应的key\r\n    private ArrayList<String> recieve;//接受的每个数据的对应的key\r\n\r\n    private ArrayList<HashMap> order = new ArrayList<>();//state_JSON为1时使用\r\n\r\n    public OkHttp(ArrayList<String> send, ArrayList<String> recieve){//构造方法\r\n        this.send = send;\r\n        this.recieve = recieve;\r\n    }\r\n\r\n    public OkHttp(ArrayList<String> send, ArrayList<String> recieve, int state_JSON, Activity activity){//构造方法\r\n        this.send = send;\r\n        this.recieve = recieve;\r\n        this.state_JSON = state_JSON;\r\n        this.activity = activity;\r\n    }\r\n\r\n\r\n    public HashMap<String, String> sendRequestWithOkHttp(HashMap<String, String> hashMap, String url) {//hashMap为发送的数据集合\r\n\r\n        JSONObject obj = new JSONObject();\r\n        FormBody.Builder params = new FormBody.Builder();\r\n        try {\r\n            Iterator<String> i = send.iterator();\r\n            if (state_JSON == 0){\r\n                while (i.hasNext()){\r\n                    String s = i.next();\r\n                    obj.put(s,hashMap.get(s));\r\n                }\r\n            }\r\n            else if (state_JSON == 1){\r\n                while (i.hasNext()){\r\n                    String s = i.next();\r\n                    params.add(s,hashMap.get(s));\r\n                }\r\n            }\r\n\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        MediaType type = MediaType.parse(\"application/json;charset=utf-8\");\r\n        RequestBody RequestBody2 = RequestBody.create(type,\"\"+obj.toString());\r\n        try {\r\n            OkHttpClient client = new OkHttpClient();\r\n            if (state_JSON == 0){\r\n                Request request = new Request.Builder()\r\n                        // 指定访问的服务器地址\r\n                        .url(url).post(RequestBody2)\r\n                        .build();\r\n                Response response = client.newCall(request).execute();\r\n                String responseData = response.body().string();\r\n                return parseJSONWithJSONObject(responseData);\r\n            }\r\n            else if (state_JSON == 1){\r\n                Request request = new Request.Builder()\r\n                        // 指定访问的服务器地址\r\n                        .url(url).post(params.build())\r\n                        .build();\r\n                Response response = client.newCall(request).execute();\r\n                String responseData = response.body().string();\r\n                return parseJSONWithJSONObject(responseData);\r\n            }\r\n            else {\r\n                Request request = new Request.Builder()\r\n                        // 指定访问的服务器地址\r\n                        .url(url).post(RequestBody2)\r\n                        .build();\r\n                Response response = client.newCall(request).execute();\r\n                String responseData = response.body().string();\r\n                return parseJSONWithJSONObject(responseData);\r\n            }\r\n\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return new HashMap<String, String>();\r\n        }\r\n    }\r\n\r\n\r\n    private HashMap<String, String > parseJSONWithJSONObject(String jsonData) {\r\n        if (state_JSON == 0){\r\n            try {\r\n                JSONObject object=new JSONObject(jsonData);\r\n                Log.d(\"name\", \"JSON length: \"+object.length());\r\n                Iterator<String> i = recieve.iterator();\r\n                HashMap<String, String> hm = new HashMap<>();\r\n                while (i.hasNext()){\r\n                    String s = i.next();\r\n                    if (s.equals(\"oid\")){\r\n                        hm.put(s ,String.valueOf(object.getInt(s)));\r\n                    }\r\n                    else if (s.equals(\"oprice\")){\r\n                        hm.put(s ,String.valueOf(object.getInt(s)));\r\n                    }\r\n                    else {\r\n                        hm.put(s ,object.getString(s));\r\n                    }\r\n\r\n                }\r\n\r\n                //日志\r\n                Log.d(\"name\", \"结果是：\"+hm.get(\"msg\"));\r\n                return hm;\r\n            } catch (JSONException e) {\r\n                e.printStackTrace();\r\n                return new HashMap<String, String>();\r\n            }\r\n        }\r\n        else if (state_JSON == 1){\r\n            try {\r\n                JSONArray array = new JSONArray(jsonData);\r\n                int len = array.length();\r\n                for (int j = 0; j < len; j++) {\r\n                    JSONObject object = array.getJSONObject(j);\r\n                    Log.d(\"name\", \"JSON length: \"+object.length());\r\n                    Iterator<String> i = recieve.iterator();\r\n                    HashMap<String, String> hm = new HashMap<>();\r\n                    while (i.hasNext()){\r\n                        String s = i.next();\r\n                        if (s.equals(\"oid\")){\r\n                            hm.put(s ,String.valueOf(object.getInt(s)));\r\n                        }\r\n                        else if (s.equals(\"oprice\")){\r\n                            hm.put(s ,String.valueOf(object.getInt(s)));\r\n                        }\r\n                        else {\r\n                            hm.put(s ,object.getString(s));\r\n                        }\r\n\r\n                    }\r\n\r\n                    //日志\r\n                    Log.d(\"name\", \"结果是：\"+hm.get(\"msg\"));\r\n                    order.add(hm);\r\n                }\r\n                MyApplication application = (MyApplication) activity.getApplicationContext();\r\n                application.orderSynFlag = true;\r\n                return new HashMap<String, String>();\r\n            } catch (JSONException e) {\r\n                e.printStackTrace();\r\n                return new HashMap<String, String>();\r\n            }\r\n        }\r\n        return new HashMap<String, String>();\r\n    }\r\n\r\n    public ArrayList<HashMap> getOrder() {\r\n        return order;\r\n    }\r\n}\r\n\r\n/*\r\n示例用法：\r\nOkHttp okHttp = new OkHttp(send,recieve);\r\nHashMap<String,String> rhm = okHttp.sendRequestWithOkHttp(hashMap, url);\r\n我们发送的数据可以用hashmap存储为一对对数据，如：<username, john> <age, 18> --><key, value>\r\n我们收到的数据也可以用hashmap存储，\r\n则我们需要准备一个hashmap来存储我们需要发送的数据（对应sendRequestWithOkHttp方法中的hashMap参数，\r\nsend为发送数据集合中的所有key值，recieve为接收数据集合中的所有key值，（有哪些取决于后端需要）(send与recieve都为ArrayList）\r\nurl为端口（如\"http://192.168.1.9:9090/login\")\r\nsendRequestWithOkHttp的返回值为收到的数据\r\n\r\n目前只写了请求后接收的方法，还没有只等待接收的方法\r\n */\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/login/util/OkHttp.java b/app/src/main/java/com/example/login/util/OkHttp.java
--- a/app/src/main/java/com/example/login/util/OkHttp.java	(revision 50db4cc62eeb34e09d17eecf44afe8993ff19cf4)
+++ b/app/src/main/java/com/example/login/util/OkHttp.java	(date 1649337969870)
@@ -125,6 +125,7 @@
             try {
                 JSONObject object=new JSONObject(jsonData);
                 Log.d("name", "JSON length: "+object.length());
+                Log.d("name", object.getString("msg"));
                 Iterator<String> i = recieve.iterator();
                 HashMap<String, String> hm = new HashMap<>();
                 while (i.hasNext()){
Index: app/src/main/java/com/example/login/user/EnrollActicity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.login.user;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.content.Intent;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.login.R;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport okhttp3.MediaType;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\nimport okhttp3.RequestBody;\r\nimport okhttp3.Response;\r\n\r\n\r\npublic class EnrollActicity extends AppCompatActivity {\r\n    private EditText enroll_username;\r\n    private EditText enroll_password;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_eoroll);\r\n        enroll_username=findViewById(R.id.username1);\r\n        enroll_password=findViewById(R.id.password1);\r\n        //按钮：确定\r\n        Button confirm = (Button)findViewById(R.id.confirm_button);\r\n        confirm.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                final String username = enroll_username.getText().toString();\r\n                final String password = enroll_password.getText().toString();\r\n                new Thread(new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        JSONObject obj = new JSONObject();\r\n                        try {\r\n                            obj.put(\"username\",username);\r\n                            obj.put(\"password\",password);\r\n                        } catch (JSONException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n\r\n                        MediaType type = MediaType.parse(\"application/json;charset=utf-8\");\r\n                        RequestBody RequestBody2 = RequestBody.create(type,\"\"+obj.toString());\r\n                        try {\r\n                            OkHttpClient client = new OkHttpClient();\r\n                            Request request = new Request.Builder()\r\n                                    // 指定访问的服务器地址\r\n                                    .url(\"http://192.168.140.71:9090/register\").post(RequestBody2)\r\n                                    .build();\r\n                            Response response = client.newCall(request).execute();\r\n                            String responseData = response.body().string();\r\n                            parseJSONWithJSONObject(responseData);\r\n                            if(parseJSONWithJSONObject(responseData).equals(\"注册成功\")){\r\n                                runOnUiThread(new Runnable() {\r\n                                    @Override\r\n                                    public void run() {\r\n                                        Toast.makeText(EnrollActicity.this,\"注册成功！\",Toast.LENGTH_SHORT).show();\r\n                                    }\r\n                                });\r\n                            }\r\n                            else if(parseJSONWithJSONObject(responseData).equals(\"用户名已存在\")){\r\n                                runOnUiThread(new Runnable() {\r\n                                    @Override\r\n                                    public void run() {\r\n                                        Toast.makeText(EnrollActicity.this,\"用户名已存在!\",Toast.LENGTH_SHORT).show();\r\n                                    }\r\n                                });\r\n                            }\r\n                        } catch (Exception e) {\r\n                            e.printStackTrace();\r\n                            runOnUiThread(new Runnable() {\r\n                                @Override\r\n                                public void run() {\r\n                                    Toast.makeText(EnrollActicity.this,\"网络错误\",Toast.LENGTH_SHORT).show();\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }).start();\r\n                /*Intent i = new Intent(EnrollActicity.this, UserLoginActivity.class);//跳转至登录界面\r\n                //启动\r\n                startActivity(i);*/\r\n\r\n            }\r\n        });\r\n\r\n        //按钮：获取验证码\r\n        Button getcode = (Button)findViewById(R.id.get_code);\r\n        getcode.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                /*****此处获取验证码界面缺失******/\r\n            }\r\n        });\r\n\r\n\r\n        //按钮：已有账号？直接登录\r\n        Button return_login = (Button)findViewById(R.id.return_login);\r\n        return_login.setOnClickListener(new View.OnClickListener(){\r\n            @Override\r\n            public void onClick(View v){\r\n                //Intent是一种运行时绑定（run-time binding）机制，它能在程序运行过程中连接两个不同的组件。\r\n                //在存放资源代码的文件夹下下，\r\n                Intent i = new Intent(EnrollActicity.this, UserLoginActivity.class);//跳转至登录界面\r\n                //启动\r\n                startActivity(i);\r\n            }\r\n        });\r\n    }\r\n    private String parseJSONWithJSONObject(String jsonData) {\r\n        try {\r\n            JSONObject object=new JSONObject(jsonData);\r\n            String name = object.getString(\"msg\");\r\n            //日志\r\n            Log.d(\"name\", name);\r\n            return name;\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n            return \"error\";\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/login/user/EnrollActicity.java b/app/src/main/java/com/example/login/user/EnrollActicity.java
--- a/app/src/main/java/com/example/login/user/EnrollActicity.java	(revision 50db4cc62eeb34e09d17eecf44afe8993ff19cf4)
+++ b/app/src/main/java/com/example/login/user/EnrollActicity.java	(date 1649378070541)
@@ -55,7 +55,7 @@
                             OkHttpClient client = new OkHttpClient();
                             Request request = new Request.Builder()
                                     // 指定访问的服务器地址
-                                    .url("http://192.168.140.71:9090/register").post(RequestBody2)
+                                    .url("http://192.168.56.1:9090/register/users").post(RequestBody2)
                                     .build();
                             Response response = client.newCall(request).execute();
                             String responseData = response.body().string();
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n        <option name=\"useQualifiedModuleNames\" value=\"true\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision 50db4cc62eeb34e09d17eecf44afe8993ff19cf4)
+++ b/.idea/gradle.xml	(date 1649330924953)
@@ -4,7 +4,7 @@
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
-        <option name="testRunner" value="PLATFORM" />
+        <option name="testRunner" value="GRADLE" />
         <option name="distributionType" value="DEFAULT_WRAPPED" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
         <option name="modules">
@@ -14,7 +14,6 @@
           </set>
         </option>
         <option name="resolveModulePerSourceSet" value="false" />
-        <option name="useQualifiedModuleNames" value="true" />
       </GradleProjectSettings>
     </option>
   </component>
